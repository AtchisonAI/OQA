//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace WcfClientCore.WcfService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WcfService.IWcfContract")]
    public interface IWcfContract {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfContract/Login", ReplyAction="http://tempuri.org/IWcfContract/LoginResponse")]
        WCFModels.Message.ModelListRsp<string> Login(WCFModels.Message.LoginReq loginReq);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfContract/Login", ReplyAction="http://tempuri.org/IWcfContract/LoginResponse")]
        System.Threading.Tasks.Task<WCFModels.Message.ModelListRsp<string>> LoginAsync(WCFModels.Message.LoginReq loginReq);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfContract/QueryControlAccessString", ReplyAction="http://tempuri.org/IWcfContract/QueryControlAccessStringResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WCFModels.Message.PageQueryReq))]
        WCFModels.Message.ModelListRsp<WCFModels.MESDB.FWTST1.ControlAccessString> QueryControlAccessString(WCFModels.Message.QueryReq queryReq);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfContract/QueryControlAccessString", ReplyAction="http://tempuri.org/IWcfContract/QueryControlAccessStringResponse")]
        System.Threading.Tasks.Task<WCFModels.Message.ModelListRsp<WCFModels.MESDB.FWTST1.ControlAccessString>> QueryControlAccessStringAsync(WCFModels.Message.QueryReq queryReq);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfContract/PageQueryControlAccessString", ReplyAction="http://tempuri.org/IWcfContract/PageQueryControlAccessStringResponse")]
        WCFModels.Message.PageModelRsp<WCFModels.MESDB.FWTST1.ControlAccessString> PageQueryControlAccessString(WCFModels.Message.PageQueryReq pageQueryReq);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfContract/PageQueryControlAccessString", ReplyAction="http://tempuri.org/IWcfContract/PageQueryControlAccessStringResponse")]
        System.Threading.Tasks.Task<WCFModels.Message.PageModelRsp<WCFModels.MESDB.FWTST1.ControlAccessString>> PageQueryControlAccessStringAsync(WCFModels.Message.PageQueryReq pageQueryReq);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfContract/UpdateControlAccessString", ReplyAction="http://tempuri.org/IWcfContract/UpdateControlAccessStringResponse")]
        WCFModels.Message.ModelRsp<WCFModels.MESDB.FWTST1.ControlAccessString> UpdateControlAccessString(WCFModels.Message.UpdateModelReq<WCFModels.MESDB.FWTST1.ControlAccessString> updateReq);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfContract/UpdateControlAccessString", ReplyAction="http://tempuri.org/IWcfContract/UpdateControlAccessStringResponse")]
        System.Threading.Tasks.Task<WCFModels.Message.ModelRsp<WCFModels.MESDB.FWTST1.ControlAccessString>> UpdateControlAccessStringAsync(WCFModels.Message.UpdateModelReq<WCFModels.MESDB.FWTST1.ControlAccessString> updateReq);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWcfContractChannel : WcfClientCore.WcfService.IWcfContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WcfContractClient : System.ServiceModel.ClientBase<WcfClientCore.WcfService.IWcfContract>, WcfClientCore.WcfService.IWcfContract {
        
        public WcfContractClient() {
        }
        
        public WcfContractClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WcfContractClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WcfContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WcfContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WCFModels.Message.ModelListRsp<string> Login(WCFModels.Message.LoginReq loginReq) {
            return base.Channel.Login(loginReq);
        }
        
        public System.Threading.Tasks.Task<WCFModels.Message.ModelListRsp<string>> LoginAsync(WCFModels.Message.LoginReq loginReq) {
            return base.Channel.LoginAsync(loginReq);
        }
        
        public WCFModels.Message.ModelListRsp<WCFModels.MESDB.FWTST1.ControlAccessString> QueryControlAccessString(WCFModels.Message.QueryReq queryReq) {
            return base.Channel.QueryControlAccessString(queryReq);
        }
        
        public System.Threading.Tasks.Task<WCFModels.Message.ModelListRsp<WCFModels.MESDB.FWTST1.ControlAccessString>> QueryControlAccessStringAsync(WCFModels.Message.QueryReq queryReq) {
            return base.Channel.QueryControlAccessStringAsync(queryReq);
        }
        
        public WCFModels.Message.PageModelRsp<WCFModels.MESDB.FWTST1.ControlAccessString> PageQueryControlAccessString(WCFModels.Message.PageQueryReq pageQueryReq) {
            return base.Channel.PageQueryControlAccessString(pageQueryReq);
        }
        
        public System.Threading.Tasks.Task<WCFModels.Message.PageModelRsp<WCFModels.MESDB.FWTST1.ControlAccessString>> PageQueryControlAccessStringAsync(WCFModels.Message.PageQueryReq pageQueryReq) {
            return base.Channel.PageQueryControlAccessStringAsync(pageQueryReq);
        }
        
        public WCFModels.Message.ModelRsp<WCFModels.MESDB.FWTST1.ControlAccessString> UpdateControlAccessString(WCFModels.Message.UpdateModelReq<WCFModels.MESDB.FWTST1.ControlAccessString> updateReq) {
            return base.Channel.UpdateControlAccessString(updateReq);
        }
        
        public System.Threading.Tasks.Task<WCFModels.Message.ModelRsp<WCFModels.MESDB.FWTST1.ControlAccessString>> UpdateControlAccessStringAsync(WCFModels.Message.UpdateModelReq<WCFModels.MESDB.FWTST1.ControlAccessString> updateReq) {
            return base.Channel.UpdateControlAccessStringAsync(updateReq);
        }
    }
}
